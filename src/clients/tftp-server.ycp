/**
 * File:	clients/tftp-server.ycp
 * Package:	Configuration of tftp-server
 * Summary:	Main file
 * Authors:	Martin Vidner <mvidner@suse.cz>
 *
 * $Id$
 *
 * Main file for tftp-server configuration. Uses all other files.
 */

{

/***
 * <h3>Configuration of the tftp-server</h3>
 */

textdomain "tftp-server";

/* The main () */
y2milestone ("----------------------------------------");
y2milestone ("Tftp-server module started");

include "tftp-server/wizards.ycp";

import "CommandLine";

// handler function for "status" command
define boolean handlerStatus(map<string, string> options) ``{
    string command = CommandLine::UniqueOption( options, ["enable", "disable", "show" ] );
	switch(command){
	case "show":
				// command line: show status of tftp-server
	   CommandLine::Print(sformat(_("Service Status: %1"), TftpServer::start));
	   break;
	case "enable":
	   TftpServer::start=true;
	   y2milestone("Enable tftp-server");
	   break;
	case "disable":
	   TftpServer::start=false;
	   y2milestone("Disable tftp-server");
	   break;
	};
 return true;
};

// handler function for "directory" command
define boolean handlerDirectory(map<string, string> options) ``{
    string command = CommandLine::UniqueOption( options, ["path", "list" ] );
        switch(command){
        case "list":
				// command line: show directory server by tftp-server
           CommandLine::Print(sformat(_("Directory Path: %1"), TftpServer::directory));
           break;
        case "path":
	   TftpServer::directory=options["path"]:"";
	   y2milestone("Set directory path to %1", TftpServer::directory);
           break;
        };
 return true;
};

// description map for command line
map cmdline_description = $[
    "id"        : "tftp-server",
    "guihandler"        : TftpServerSequence,
    "initialize"	: TftpServer::Read,
    "finish"		: TftpServer::Write,
    "help"		: _("Configure a TFTP server"),
    "actions"		: $[
	"status" : $[
		//command line: help text for "status" command
	  "help" : _("Status of the TFTP server"),
	  "handler" : handlerStatus
	 ],
	"directory" : $[
                //command line: help text for "directory" command
	  "help" : _("Directory of the TFTP server"),
	  "handler" : handlerDirectory
	 ]
	],
    "options"		: $[
	 "enable" : $[
                //command line: help text for "enable" command
	  "help" : _("Enable the TFTP service")
	 ],
	 "disable" : $[
                //command line: help text for "disable" command
	  "help" : _("Disable the TFTP service")
	 ],
	 "show" : $[
                //command line: help text for "show" command
	  "help" : _("Show the status of the TFTP service")
	 ],
	 "path" : $[
	  "type" : "string",
                //command line: help text for "path" command
	  "help" : _("Set the directory for the TFTP server")
	 ],
	 "list" : $[
                //command line: help text for "list" command
	  "help" : _("Show the directory for the TFTP server")
	 ]
	],
    "mappings"		: $[
	 "status" : [ "enable", "disable", "show" ],
	 "directory" : [ "path", "list" ]
	]
];

/* main ui function */
any ret = nil;

ret = CommandLine::Run (cmdline_description);
y2debug("ret=%1", ret);

/* Finish */
y2milestone("Tftp-server module finished");
y2milestone("----------------------------------------");

return ret;

/* EOF */
}
